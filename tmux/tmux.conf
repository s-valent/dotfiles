set -g mouse on
set-option -g history-limit 1000000

set -g set-clipboard on

set-option -g set-titles on
set-option -g set-titles-string '#W'

set -g default-terminal 'tmux-256color'
set -ag terminal-overrides ',xterm-256color:RGB'

# for some reason, this messes up with bracketed paste in nvim
# set -s extended-keys always
# set -ag terminal-features 'xterm*:extkeys'

# fix it: od -c and paste here
bind-key -n C-, send Escape '[27;5;44~'
bind-key -n C-. send Escape '[27;5;46~'

bind-key -n Home send Escape 'OH'
bind-key -n End send Escape 'OF'

setw -g mode-keys vi
bind-key / copy-mode \; send-key ?
bind -n C-l send-keys -R \; send-keys C-l \; run 'sleep 0.1' \; clear-history

# copy mode
bind-key -T copy-mode-vi 'y' send -X copy-selection
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X rectangle-toggle

bind-key -T copy-mode-vi Escape send-keys -X clear-selection

unbind-key -T copy-mode-vi MouseDragEnd1Pane

bind-key -T copy-mode-vi DoubleClick1Pane select-pane \; send-keys -X select-word
bind-key -T root DoubleClick1Pane select-pane -t = \; \
	if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" \
		{ send-keys -M } { copy-mode -H ; send-keys -X select-word }

bind-key -T copy-mode-vi TripleClick1Pane select-pane \; send-keys -X select-line
bind-key -T root TripleClick1Pane select-pane -t = \; \
	if-shell -F "#{||:#{pane_in_mode},#{mouse_any_flag}}" \
		{ send-keys -M } { copy-mode -H ; send-keys -X select-line }

# scroll by one
bind -Tcopy-mode-vi WheelUpPane send -N1 -X scroll-up
bind -Tcopy-mode-vi WheelDownPane send -N1 -X scroll-down

# # emulate scroll if not supported
# bind-key -T root WheelUpPane \
# 	if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
# 		'send -Mt=' \
# 		'if-shell -t= "#{?alternate_on,true,false} | grep -q \"#{pane_current_command}\"" \
# 			"send -t= Up" "copy-mode -et="'
#
# bind-key -T root WheelDownPane \
# 	if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
# 		'send -Mt=' \
# 		'if-shell -t= "#{?alternate_on,true,false} | grep -q \"#{pane_current_command}\"" \
# 			"send -t= Down" "send -Mt="'

# don't do anything when a 'bell' rings
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off
set -g bell-action none

# clock mode
setw -g clock-mode-colour colour1

# pane borders
set -g pane-border-style 'fg=colour1'
set -g pane-active-border-style 'fg=colour3'

# statusbar
set -g base-index 1
set -g status-position top
set -g status-justify left
set -g status-style 'fg=colour1'
set -g status-left ''
set -g status-right ''
# set -g status-right '%Y-%m-%d %H:%M '
# set -g status-right '#(pgrep caffeinate > /dev/null || echo "ó°’² ")'
set -g status-right-length 50
set -g status-left-length 10

setw -g window-status-current-style 'fg=colour0 bg=colour1 bold'
setw -g window-status-current-format ' #I #W #F '

setw -g window-status-style 'fg=colour1 dim'
setw -g window-status-format ' #I #[fg=colour7]#W #[fg=colour1]#F '

setw -g window-status-bell-style 'fg=colour2 bg=colour1 bold'

# messages
set -g message-style 'fg=colour2 bg=colour16 bold'

if-shell -b '[ "$SSH_CLIENT" = "" ]' {
	# custom local prefix
	unbind-key C-b
	set-option -g prefix C-q
	bind-key -n C-q send-prefix

	# disable status on one pane
	if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"
	set-hook -g window-linked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
	set-hook -g window-unlinked 'if -F "#{==:#{session_windows},1}" "set -g status off" "set -g status on"'
} {
	unbind-key C-b
	set-option -g prefix C-a
	bind-key -n C-a send-prefix
}

# no prompt on exit
bind-key q kill-server
bind-key & kill-window
bind-key x kill-pane
